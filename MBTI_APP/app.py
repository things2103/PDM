# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-_BPCiTFmrSSjKbEWxmZ72zA1r_TyyZ_
"""

import streamlit as st
st.set_page_config(page_title="Prediksi Kepribadian MBTI", layout="centered")

import joblib

# === CSS Background & Styling ===
st.markdown("""
    <style>
    body {
        background-color: #fef9f6;
    }
    .stApp {
        background-color: #fff8f2;
        font-family: 'Segoe UI', sans-serif;
    }
    </style>
""", unsafe_allow_html=True)

# === MBTI Descriptions with Emoji/Icon ===
mbti_descriptions = {
    "ENFP": "🎉 ENFP (The Campaigner): Energetic, enthusiastic, creative, and sociable. Loves exploring new ideas and possibilities.",
    "INFP": "🌸 INFP (The Mediator): Idealistic, loyal to their values, empathetic, and deeply introspective.",
    "INFJ": "🧠 INFJ (The Advocate): Insightful, inspiring, and driven by strong values and a desire to help others.",
    "INTJ": "📐 INTJ (The Architect): Strategic thinkers with a plan for everything, independent and determined.",
    "ENTP": "🗣️ ENTP (The Debater): Innovative, curious, and loves intellectual challenges and debates.",
    "ENTJ": "👔 ENTJ (The Commander): Bold, efficient, natural leaders who enjoy setting and achieving big goals.",
    "INTP": "🔬 INTP (The Thinker): Analytical, logical, and highly curious about how things work.",
    "ISFP": "🎨 ISFP (The Adventurer): Sensitive, artistic, and enjoys living in the present moment.",
    "ISTP": "🔧 ISTP (The Virtuoso): Bold and practical experimenters, masters of tools and techniques.",
    "ISFJ": "🛡️ ISFJ (The Defender): Loyal, warm, and detail-oriented. Cares deeply for others.",
    "ISTJ": "📘 ISTJ (The Logistician): Responsible, organized, and values tradition and rules.",
    "ESFP": "🎭 ESFP (The Entertainer): Spontaneous, energetic, and loves to entertain and have fun.",
    "ESTP": "🏎️ ESTP (The Entrepreneur): Energetic, perceptive, and thrives in fast-paced environments.",
    "ESFJ": "💞 ESFJ (The Consul): Caring, popular, and always eager to help others.",
    "ESTJ": "🗂️ ESTJ (The Executive): Practical, realistic, and great at managing people and tasks.",
    "ENFJ": "🌟 ENFJ (The Protagonist): Charismatic leaders who inspire others and care deeply about community."
}

# === Predictor Class ===
class MBTIPredictor:
    def __init__(self, model_bundle):
        self.model_bundle = model_bundle

    def predict_one(self, text):
        mbti = ''
        for dim in ['IE', 'NS', 'TF', 'JP']:
            bundle = self.model_bundle[dim]
            vec = bundle['vectorizer'].transform([text])
            vec = bundle['selector'].transform(vec)
            pred = bundle['model'].predict(vec)
            label = bundle['label_encoder'].inverse_transform(pred)[0]
            mbti += label
        return mbti

# === Load Model ===
@st.cache_resource
def load_model():
    model_bundle = joblib.load("model/mbti_complete_model.pkl")
    return model_bundle['mbti_predictor']

predictor = load_model()

# === UI Title ===
st.markdown("<h1 style='text-align:center;color:#4B8BBE;'>✨ MBTI Personality Type Predictor</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align:center;font-size:18px;'>Write a short paragraph about yourself to discover your MBTI type.</p>", unsafe_allow_html=True)
st.markdown("<p style='text-align:center;color:red;font-weight:bold;'>🗣️ Please write your input in English only!</p>", unsafe_allow_html=True)

# === Input Field ===
user_input = st.text_area("📝 Tell us about yourself:", height=200)

# === Predict Button ===
if st.button("🔍 Predict MBTI"):
    if user_input.strip() == "":
        st.warning("⚠️ Please enter some text before predicting.")
    else:
        hasil = predictor.predict_one(user_input)

        st.markdown(
            f"""
            <div style='background-color:#eaf4fc; padding:20px; border-radius:15px; text-align:center;'>
                <h2 style='color:#333;'>Your MBTI Personality Type:</h2>
                <h1 style='font-size:48px; color:#007acc;'>{hasil}</h1>
            </div>
            """, unsafe_allow_html=True
        )

        if hasil in mbti_descriptions:
            st.markdown(
                f"""
                <div style='background-color:#fdf2e9; padding:15px; border-radius:10px; margin-top:20px;'>
                    <p style='font-size:18px;'>{mbti_descriptions[hasil]}</p>
                </div>
                """, unsafe_allow_html=True
            )
        else:
            st.warning("No description available for this type.")

# === Footer ===
st.markdown("---")
st.markdown("<p style='text-align:center;font-size:13px;'>Made with by <b>Fitrotul Faizah / 22.11.5021</b> | Data Mining Final Project</p>", unsafe_allow_html=True)